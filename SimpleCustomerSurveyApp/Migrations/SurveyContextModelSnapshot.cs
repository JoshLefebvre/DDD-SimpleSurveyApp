// <auto-generated />
using System;
using InfrastructureLayer.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SimpleCustomerSurveyApp.Migrations
{
    [DbContext(typeof(SurveyContext))]
    partial class SurveyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SurveyName");

                    b.HasKey("Id");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("DomainLayer.SurveyAggregate.SurveyQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("QuestionText");

                    b.Property<int>("QuestionType");

                    b.Property<int?>("SurveyId");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SurveyQuestion");
                });

            modelBuilder.Entity("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceQuestion", b =>
                {
                    b.HasBaseType("DomainLayer.SurveyAggregate.SurveyQuestion");


                    b.ToTable("MultipleChoiceQuestion");

                    b.HasDiscriminator().HasValue("MultipleChoiceQuestion");
                });

            modelBuilder.Entity("DomainLayer.SurveyAggregate.QuestionTypes.ScaleQuestion", b =>
                {
                    b.HasBaseType("DomainLayer.SurveyAggregate.SurveyQuestion");

                    b.Property<int>("Scale");

                    b.ToTable("ScaleQuestion");

                    b.HasDiscriminator().HasValue("ScaleQuestion");
                });

            modelBuilder.Entity("DomainLayer.SurveyAggregate.QuestionTypes.TextQuestion", b =>
                {
                    b.HasBaseType("DomainLayer.SurveyAggregate.SurveyQuestion");


                    b.ToTable("TextQuestion");

                    b.HasDiscriminator().HasValue("TextQuestion");
                });

            modelBuilder.Entity("DomainLayer.SurveyAggregate.SurveyQuestion", b =>
                {
                    b.HasOne("DomainLayer.Entities.Survey")
                        .WithMany("OrderItems")
                        .HasForeignKey("SurveyId");
                });

            modelBuilder.Entity("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceQuestion", b =>
                {
                    b.OwnsOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "AnswerA", b1 =>
                        {
                            b1.Property<int>("MultipleChoiceQuestionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Answer");

                            b1.Property<int>("Count");

                            b1.ToTable("Questions");

                            b1.HasOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceQuestion")
                                .WithOne("AnswerA")
                                .HasForeignKey("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "MultipleChoiceQuestionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "AnswerB", b1 =>
                        {
                            b1.Property<int>("MultipleChoiceQuestionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Answer");

                            b1.Property<int>("Count");

                            b1.ToTable("Questions");

                            b1.HasOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceQuestion")
                                .WithOne("AnswerB")
                                .HasForeignKey("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "MultipleChoiceQuestionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "AnswerC", b1 =>
                        {
                            b1.Property<int?>("MultipleChoiceQuestionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Answer");

                            b1.Property<int>("Count");

                            b1.ToTable("Questions");

                            b1.HasOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceQuestion")
                                .WithOne("AnswerC")
                                .HasForeignKey("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "MultipleChoiceQuestionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "AnswerD", b1 =>
                        {
                            b1.Property<int?>("MultipleChoiceQuestionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Answer");

                            b1.Property<int>("Count");

                            b1.ToTable("Questions");

                            b1.HasOne("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceQuestion")
                                .WithOne("AnswerD")
                                .HasForeignKey("DomainLayer.SurveyAggregate.QuestionTypes.MultipleChoiceAnswer", "MultipleChoiceQuestionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
